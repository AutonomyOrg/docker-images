# Credits: https://www.learncloudnative.com/blog/2020-02-20-github-action-build-push-docker-images

name: Build and publish Docker image

on:
  # Execute this script only if any of the VERSION files was updated
  push:
    branches:
      - 'main'
      - 'feature/**'

    paths:
      - '**/VERSION'

jobs:
  
  # List all VERSION files (and hence Docker images) that were updated
  list-updated-images:
    runs-on: ubuntu-latest

    # Return a list of <image,version> tuples
    outputs:
      images: ${{steps.images.outputs.list}}

    steps:
      # Checkout repository
      - name: Set up repository
        uses: actions/checkout@v3
        with:
          set-safe-directory: true
          fetch-depth: 0            # fetch all history, and not only the latest commit

      # List all VERSION files that were updated
      - name: List all updated VERSION files
        id: images
        run: |
          # Clear output array of images
          outputList=""

          for versionFilePath in $(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} ${{ github.event.before }} | grep "VERSION");
          do
            imageFolder=${versionFilePath%"/VERSION"}
            IMAGE_NAME=${imageFolder##*/}

            # Get latest image version number
            IMAGE_VERSION=$(tail -n 1 $versionFilePath)

            echo "Update Docker image ${IMAGE_NAME} to version ${IMAGE_VERSION}"
            
            outputList+="${IMAGE_NAME}:${IMAGE_VERSION}\n"
          done;

          # Set job step's output parameter value
          echo "::set-output name list::${outputList}"


  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Set up repository
        uses: actions/checkout@v3
        with:
          set-safe-directory: true

      # Setup Docker BuildKit Buildx image builder
      - name: Install Docker Buildx tool
        id: builder
        uses: docker/setup-buildx-action@v1
      
      # Log in to the Github Container Registry
      - name: Log in to the Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Set Docker image metadata
      # - name: Extract Docker image metadata (i.e. tags and labels)
      #   id: metadata
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: |
      #       ghcr.io/${{ github.repository_owner }}/sandbox-latex
      #     tags: |
      #       latest
      #       type=ref,event=branch
      #       type=ref,event=pr
      #       type=semver,pattern={{version}}
      #       type=semver,pattern={{major}}.{{minor}}         

      # Build Docker image using Docker Buildx and push it to Github Container Registry
      - name: Build and push Docker image(s) to GitHub Container Registry
        uses: docker/build-push-action@v3
        with:
          # Relative path to the place where source code with Dockerfile is located
          context: ./.devcontainer
          file: ./.devcontainer/Dockerfile
          builder: ${{ steps.builder.outputs.name }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          push: ${{ github.event_name != 'pull_request' }}
